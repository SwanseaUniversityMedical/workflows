name: 'PR and Release Container'
inputs:
  name:
    description: "Name of the release asset."
    required: true

  comment-pr:
    description: "PR comment creation and update."
    default: "false"

  comment-release:
    description: "Release comment creation and update."
    default: "true"

  build-file:
    description: "Path to the container file."
    required: true

  build-context:
    description: "Path to the build root dir."
    default: '.'

  build-args:
    description: "KEY=VALUE build args as a multiline string."
    default: ''

  build-secrets:
    description: "KEY=VALUE build secrets as a multiline string."
    default: ''

  build-secret-envs:
    description: "KEY=VALUE build secrets from env vars as a multiline string."
    default: ''

  build-secret-files:
    description: "KEY=VALUE build secrets from files as a multiline string."
    default: ''

  test-flags:
    description: "Arguments passed to docker run."
    default: ''

  test-args:
    description: "Arguments passed to the container."
    default: ''

  registry:
    description: "URL of the container registry."
    required: true

  registry-user:
    description: "Username for the container registry."
    required: true

  registry-repo:
    description: "Repo within container registry project."
    required: true

  release-tag-format:
    description: "Semantic-release Github release tag format."
    default: '${version}'

  registry-extra-tag-command:
    description: "Extra tag to push release container."
    default: ''

  cosign-public-key:
    description: "Public key for cosigning images."
    required: false

  platforms:
    description: "Comma-separated list of platforms to build for (e.g., linux/amd64,linux/arm64)"
    default: "linux/amd64"

  registry-token:
    description: "Authentication token for the container registry."
    required: true

  cosign-private-key:
    description: "Private key for cosigning images."
    required: false

  cosign-password:
    description: "Private key password for cosigning images."
    required: false

  platforms:
    description: "Comma-separated list of platforms to build for (e.g., linux/amd64,linux/arm64)"
    default: "linux/amd64"

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

    - id: create-release-labels
      uses: SwanseaUniversityMedical/workflows/.github/actions/create-release-labels@v3.0.0-create-release-labels-action
      with:
        name: ${{ inputs.name }}

    - if: github.event_name == 'pull_request'
      uses: SwanseaUniversityMedical/workflows/.github/actions/pr-container@feat/multiarch-builds
      with:
        name: ${{ inputs.name }}
        comment-enabled: ${{ inputs.comment-pr }}
        registry: ${{ inputs.registry }}
        registry-user: ${{ inputs.registry-user }}
        registry-repo: ${{ inputs.registry-repo }}
        registry-token: ${{ inputs.registry-token }}
        build-file: ${{ inputs.build-file }}
        build-context: ${{ inputs.build-context }}
        build-args: ${{ inputs.build-args }}
        build-secrets: ${{ inputs.build-secrets }}
        build-secret-envs: ${{ inputs.build-secret-envs }}
        build-secret-files: ${{ inputs.build-secret-files }}
        test-flags: ${{ inputs.test-flags }}
        test-args: ${{ inputs.test-args }}
        platforms: ${{ inputs.platforms }}
        cosign-public-key: ${{ inputs.cosign-public-key }}
        cosign-private-key: ${{ inputs.cosign-private-key }}
        cosign-password: ${{ inputs.cosign-password }}

    - if: github.event_name == 'push'
      uses: SwanseaUniversityMedical/workflows/.github/actions/release-container@v3.0.0-release-container-action
      with:
        name: ${{ inputs.name }}
        comment-enabled: ${{ inputs.comment-release }}
        registry: ${{ inputs.registry }}
        registry-user: ${{ inputs.registry-user }}
        registry-repo: ${{ inputs.registry-repo }}
        registry-token: ${{ inputs.registry-token }}
        registry-extra-tag-command: ${{ inputs.registry-extra-tag-command }}
        release-tag-format: ${{ inputs.release-tag-format }}
        build-file: ${{ inputs.build-file }}
        build-context: ${{ inputs.build-context }}
        build-args: ${{ inputs.build-args }}
        build-secrets: ${{ inputs.build-secrets }}
        build-secret-envs: ${{ inputs.build-secret-envs }}
        build-secret-files: ${{ inputs.build-secret-files }}
        test-flags: ${{ inputs.test-flags }}
        test-args: ${{ inputs.test-args }}
        platforms: ${{ inputs.platforms }}
        cosign-public-key: ${{ inputs.cosign-public-key }}
        cosign-private-key: ${{ inputs.cosign-private-key }}
        cosign-password: ${{ inputs.cosign-password }}
