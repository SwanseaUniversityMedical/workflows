name: 'Sonar DotNet 8'
inputs:

  project-name:
    description: "Name of the dotnet project to scan."
    required: true

  project-file:
    description: "Path to the csproj file relative to the project-context."
    required: true

  project-context:
    description: "Path to the root dir of the project."
    default: '.'

  sonar-url:
    description: "URL of the sonarqube sever."
    required: true

  sonar-token:
    description: "Authentication token for sonarqube."
    required: true

  sonar-exclusions:
    description: "Exclusion lists."
    default: ''

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      with:
        fetch-depth: 0

    - name: determine project version
      id: version
      uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
      with:
        script: |
          var inputs = ${{ toJSON(inputs) }};
          var ref = "${{ github.ref_name }}";
          
          if (context.eventName === "push") {
            // On push to tag use the tag as the version
            var version = `${ref}`;
            console.log(`version: ${version}`);
            core.setOutput("version", version);
          }
          else if (context.eventName === "pull_request") {
            // On pr use pr number
            var pr = context.payload.number;
            var version = `pr-${pr}`;
            console.log(`version: ${version}`);
            core.setOutput("version", version);
          }

    - name: scan project
      shell: bash
      run: |
        for n in {1..3}; do
          docker run --rm -v $(pwd):/repo -w "/repo/$PROJECT_CONTEXT" $SONAR_IMAGE \
            bash -c " \
              dotnet /sonar-scanner/SonarScanner.MSBuild.dll begin \
                /d:sonar.scanner.scanAll=false \
                /d:sonar.scanner.skipJreProvisioning=true \
                /d:sonar.scanner.javaExePath=/usr/bin/java \
                /k:\"$PROJECT_NAME\" /name:\"$PROJECT_NAME\" \
                /v:\"$PROJECT_VERSION\" \
                /d:sonar.projectBaseDir=\"/repo/$PROJECT_CONTEXT\" \
                /d:sonar.exclusions=\"$SONAR_EXCLUSIONS\" \
                /d:sonar.host.url=\"$SONAR_URL\" \
                /d:sonar.token=\"$SONAR_TOKEN\" && \
              dotnet restore \"$PROJECT_FILE\" && \
              dotnet build \"$PROJECT_FILE\" -c Release && \
              dotnet /sonar-scanner/SonarScanner.MSBuild.dll end \
                /d:sonar.token=\"$SONAR_TOKEN\"" && \
          break;
        done
      env:
        SONAR_IMAGE: harbor.ukserp.ac.uk/github-workflows/sonar-dotnet-8:1.0.0
        PROJECT_NAME: ${{ inputs.project-name }}
        PROJECT_FILE: ${{ inputs.project-file }}
        PROJECT_CONTEXT: ${{ inputs.project-context }}
        PROJECT_VERSION: ${{ steps.version.outputs.version }}
        SONAR_EXCLUSIONS: ${{ inputs.sonar-exclusions }}
        SONAR_URL: ${{ inputs.sonar-url }}
        SONAR_TOKEN: ${{ inputs.sonar-token }}
