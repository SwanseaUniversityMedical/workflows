on:
  workflow_call:
    inputs:

      job-name:
        description: "Job name to display on Slack messages."
        required: true
        type: string

      chart:
        description: "Path to the helm chart."
        required: true
        type: string

      chart-registry:
        description: "URL of the chart registry."
        required: true
        type: string

      chart-registry-user:
        description: "Username for the chart registry."
        required: true
        type: string

      chart-registry-project:
        description: "Project within chart registry."
        required: true
        type: string

      chart-registry-repo:
        description: "Repo within chart registry project."
        required: true
        type: string

      slack-channel:
        description: "ID of the Slack channel to post updates to."
        required: true
        type: string

      slack-thread:
        description: "Slack thread to reply to."
        required: true
        type: string

      status-running:
        description: "Running status for the message header."
        default: ':hammer_and_wrench:'
        type: string

      status-success:
        description: "Success status for the message header."
        default: ':white_check_mark:'
        type: string

      status-failure:
        description: "Failure status for the message header."
        default: ':no_entry:'
        type: string

      github-app-id:
        description: "App ID for Github."
        required: true
        type: string

    secrets:

      slack-token:
        description: "Authentication token for Slack."
        required: true

      chart-registry-token:
        description: "Authentication token for the chart registry."
        required: true

      github-app-private-key:
        description: "App private key for Github."
        required: true

    outputs:

      registry:
        description: "URL of the chart registry."
        value: ${{ inputs.chart-registry }}

      project:
        description: "Project within chart registry."
        value: ${{ inputs.chart-registry-project }}

      repo:
        description: "Repo within chart registry project."
        value: ${{ inputs.chart-registry-repo }}

      pr-tag:
        description: "Docker pull URI with pr tag."
        value: ${{ jobs.build-pr-chart.outputs.pr-tag }}

      pr-commit-tag:
        description: "Docker pull URI with pr and sha tag."
        value: ${{ jobs.build-pr-chart.outputs.pr-commit-tag }}

jobs:
  build-pr-chart:
    runs-on: [ self-hosted, linux, x64 ]

    outputs:
      pr-tag: ${{ env.PR_TAG }}
      pr-commit-tag: ${{ env.PR_COMMIT_TAG }}

    steps:
      - name: update slack thread
        uses: archive/github-actions-slack@v2.7.0
        id: slack
        with:
          slack-bot-user-oauth-access-token: ${{ secrets.slack-token }}
          slack-channel: ${{ inputs.slack-channel }}
          slack-optional-thread_ts: ${{ inputs.slack-thread }}
          slack-text: |
            ${{ inputs.status-running }}  job: ${{ github.job }} / ${{ inputs.job-name }}

      - name: build chart uri
        run: |
          echo "CHART_REPO=${{ inputs.chart-registry }}/chartrepo/${{ inputs.chart-registry-project }}" >> $GITHUB_ENV

      - name: get short commit sha
        run: |
          echo "GITHUB_SHORT_SHA=`echo ${{ github.event.pull_request.head.sha }} | cut -c1-7`" >> $GITHUB_ENV

      - name: create tags
        run: |
          echo "PR_TAG=pr-${{ github.event.pull_request.number }}" >> $GITHUB_ENV  
          echo "PR_COMMIT_TAG=pr-${{ github.event.pull_request.number }}-${{ env.GITHUB_SHORT_SHA }}" >> $GITHUB_ENV  

      - name: clone repo
        uses: actions/checkout@v3

      - name: generate token
        id: generate-token
        uses: tibdex/github-app-token@v1.8.0
        with:
          app_id: ${{ inputs.github-app-id }}
          private_key: ${{ secrets.github-app-private-key }}

      - name: install helm
        uses: azure/setup-helm@v3
        with:
          version: 'latest'
          token: ${{ steps.generate-token.outputs.token }}

      - name: update chart dependencies
        run: |
          helm dependency update ${{ inputs.chart }}

      - name: setup chart-museum push plugin
        # TODO Can be changed to modern OCI style chart push after we upgrade harbor to latest
        run: |
          helm plugin install https://github.com/chartmuseum/helm-push

      - name: login to chart registry
        run: |
          set -x
          helm repo add --pass-credentials --username '${{ inputs.chart-registry-user }}' --password '${{ secrets.chart-registry-token }}' remote https://${{ env.CHART_REPO }}

      - name: push charts
        run: |
          helm cm-push ${{ inputs.chart }} --version $PR_TAG --app-version $PR_TAG remote
          helm cm-push ${{ inputs.chart }} --version $PR_COMMIT_TAG --app-version $PR_COMMIT_TAG remote

      - name: comment the image tags to the pr
        uses: actions/github-script@v6
        with:
          github-token: ${{ steps.generate-token.outputs.token }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'job: `${{ github.job }}` / `${{ inputs.job-name }}`\n\n```Status: Pushed PR chart assets!\n\nhelm pull --version ${{ env.PR_TAG }} <repo>/${{ inputs.chart-registry-repo }}\nhelm pull --version ${{ env.PR_COMMIT_TAG }} <repo>/${{ inputs.chart-registry-repo }}\n```\n\n:robot: :wheel_of_dharma: :package: :passenger_ship:\n'
            })

      - name: update slack thread success
        uses: archive/github-actions-slack@v2.7.0
        with:
          slack-bot-user-oauth-access-token: ${{ secrets.slack-token }}
          slack-channel: ${{ inputs.slack-channel }}
          slack-function: update-message
          slack-update-message-ts: ${{ fromJson(steps.slack.outputs.slack-result).response.message.ts }}
          slack-update-message-text: |
            ${{ inputs.status-success }}  job: ${{ github.job }} / ${{ inputs.job-name }}

            ```
            Status: Pushed PR chart assets!
            
            helm pull --version ${{ env.PR_TAG }} <repo>/${{ inputs.chart-registry-repo }}
            helm pull --version ${{ env.PR_COMMIT_TAG }} <repo>/${{ inputs.chart-registry-repo }}
            ```

      - name: update slack thread failure
        uses: archive/github-actions-slack@v2.7.0
        if: failure()
        with:
          slack-bot-user-oauth-access-token: ${{ secrets.slack-token }}
          slack-channel: ${{ inputs.slack-channel }}
          slack-function: update-message
          slack-update-message-ts: ${{ fromJson(steps.slack.outputs.slack-result).response.message.ts }}
          slack-update-message-text: |
            ${{ inputs.status-failure }}  job: ${{ github.job }} / ${{ inputs.job-name }}
