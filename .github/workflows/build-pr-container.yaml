on:
  workflow_call:
    inputs:

      job-name:
        description: "Job name to display on Slack messages."
        required: true
        type: string

      command:
        description: "Command to build the container named $IMAGE."
        required: true
        type: string

      container-registry:
        description: "URL of the container registry."
        required: true
        type: string

      container-registry-user:
        description: "Username for the container registry."
        required: true
        type: string

      container-registry-project:
        description: "Project within container registry."
        required: true
        type: string

      container-registry-repo:
        description: "Repo within container registry project."
        required: true
        type: string

      slack-channel:
        description: "ID of the Slack channel to post updates to."
        required: true
        type: string

      status-failure:
        description: "Failure status for the message header."
        default: ':no_entry:'
        type: string

      cosign-public-key:
        description: "Public key for cosigning images."
        required: false
        type: string

    secrets:

      slack-token:
        description: "Authentication token for Slack."
        required: true

      container-registry-token:
        description: "Authentication token for the container registry."
        required: true

      cosign-private-key:
        description: "Private key for cosigning images."
        required: false

      cosign-password:
        description: "Private key password for cosigning images."
        required: false

    outputs:

      registry:
        description: "URL of the container registry."
        value: ${{ inputs.container-registry }}

      project:
        description: "Project within container registry."
        value: ${{ inputs.container-registry-project }}

      repo:
        description: "Repo within container registry project."
        value: ${{ inputs.container-registry-repo }}

      digest:
        description: "Docker pull URI with digest."
        value: ${{ jobs.build-pr-container.outputs.digest }}

      pr-tag:
        description: "Docker pull URI with pr tag."
        value: ${{ jobs.build-pr-container.outputs.pr-tag }}

      pr-commit-tag:
        description: "Docker pull URI with pr and sha tag."
        value: ${{ jobs.build-pr-container.outputs.pr-commit-tag }}

jobs:
  build-pr-container:
    runs-on: 
      labels: [self-hosted, linux, x64]
      group: heavy

    outputs:
      digest: ${{ env.DIGEST }}
      pr-tag: ${{ env.PR_TAG }}
      pr-commit-tag: ${{ env.PR_COMMIT_TAG }}

    steps:
      - name: build image uri
        run: |
          echo "IMAGE=${{ inputs.container-registry }}/${{ inputs.container-registry-project }}/${{ inputs.container-registry-repo }}" >> $GITHUB_ENV

      - name: get short commit sha
        run: |
          echo "GITHUB_SHORT_SHA=`echo ${{ github.event.pull_request.head.sha }} | cut -c1-7`" >> $GITHUB_ENV

      - name: create tags
        run: |
          echo "PR_TAG=${{ env.IMAGE }}:pr-${{ github.event.pull_request.number }}" >> $GITHUB_ENV  
          echo "PR_COMMIT_TAG=${{ env.IMAGE }}:pr-${{ github.event.pull_request.number }}-${{ env.GITHUB_SHORT_SHA }}" >> $GITHUB_ENV  

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.1.2

      - name: clone repo
        uses: actions/checkout@v3

      - name: login to container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ inputs.container-registry }}
          username: ${{ inputs.container-registry-user }}
          password: ${{ secrets.container-registry-token }}

      - name: pull container
        run: |
          docker pull ${{ env.PR_TAG }} || true

      - name: build container
        run: ${{ inputs.command }}

      - name: tag container
        run: |
          docker tag ${{ env.IMAGE }} ${{ env.PR_TAG }}
          docker tag ${{ env.IMAGE }} ${{ env.PR_COMMIT_TAG }}

      - name: push container
        run: |
          docker push ${{ env.PR_TAG }}
          docker push ${{ env.PR_COMMIT_TAG }}

      - name: container digest
        id: digest
        run: |
          echo "DIGEST=`docker inspect --format='{{index .RepoDigests 0}}' ${{ env.PR_COMMIT_TAG }}`" >> $GITHUB_ENV

      - name: cosign image
        if: (env.COSIGN_PRIVATE_KEY != '') && (env.COSIGN_PASSWORD != '') && (inputs.cosign-public-key != '')
        env:
          COSIGN_PRIVATE_KEY: ${{ secrets.cosign-private-key }}
          COSIGN_PASSWORD: ${{ secrets.cosign-password }}
        run: |
          cosign sign --yes --key env://COSIGN_PRIVATE_KEY "${{ env.DIGEST }}"

      - name: cosign verify image
        if: (env.COSIGN_PRIVATE_KEY != '') && (env.COSIGN_PASSWORD != '') && (inputs.cosign-public-key != '')
        env:
          COSIGN_PRIVATE_KEY: ${{ secrets.cosign-private-key }}
          COSIGN_PASSWORD: ${{ secrets.cosign-password }}
          COSIGN_PUBLIC_KEY: ${{ inputs.cosign-public-key }}
        run: |
          cosign verify --key env://COSIGN_PUBLIC_KEY "${{ env.DIGEST }}"

      - name: annotate the ci run with container tags
        run: >-
          echo "::notice title=Job: ${{ github.job }} / ${{ inputs.job-name }}::%0A
          Pushed PR container assets!%0A
          - %0A
          docker pull ${{ env.PR_TAG }}%0A
          docker pull ${{ env.PR_COMMIT_TAG }}%0A
          docker pull ${{ env.DIGEST }}"

      - name: update slack thread failure
        uses: archive/github-actions-slack@v2.7.0
        continue-on-error: true
        if: failure()
        with:
          slack-bot-user-oauth-access-token: ${{ secrets.slack-token }}
          slack-channel: ${{ inputs.slack-channel }}
          slack-text: |
            *${{ github.repository }}*\n
            *PR-${{ github.event.pull_request.number }} Update*\n
            ${{ inputs.status-failure }} job: ${{ github.job }} / ${{ inputs.job-name }}\n
            <https://github.com/${{ github.repository }}/pull/${{ github.event.pull_request.number }}|:octocat: Pull Request>\n
            <https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}|:book: CI Logs>\n
            ```
            PR:       ${{ github.event.pull_request.title }}
            Branch:   ${{ github.head_ref }}
            Ref:      ${{ github.ref }}
            Sha:      ${{ github.event.pull_request.head.sha }}
            Workflow: ${{ github.workflow }}
            Run:      ${{ github.run_id }}
            ```
