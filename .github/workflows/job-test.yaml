name: Job test

on:
  pull_request:
    types:
      - opened
      - synchronize

permissions:
  # Permission needed for the changes.yaml workflow to detect changes across the full PR branch
  # pull-request: write if you enable PR thread comments
  pull-requests: read
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  version:
    # Determine if a release should happen and what its version would be
    uses: ./.github/workflows/version.yaml
    with:
      job-name: whalesay
      release-tag-format: 'whalesay-${version}'
      release-rules: |
        [
          {"type": "major", "release": "major"},
          {"type": "minor", "release": "minor"},
          {"type": "patch", "release": "patch"},
          {"type": "no-release", "release": false},
        
          {"type": "chore", "release": "patch"},
          {"type": "refactor", "release": "patch"},
          {"type": "style", "release": "patch"},
        
          {"type": "docs", "release": false},
          {"type": "test", "release": false},
          {"type": "ci", "release": false},
        
          {"type": "feat", "release": "minor"},
        
          {"type": "revert", "release": "patch"},
          {"type": "perf", "release": "patch"},
          {"type": "fix", "release": "patch"},
          {"type": "build", "release": "patch"},
        ]
      release-branches: feat/buildx
      slack-channel: ${{ vars.SLACK_CHANNEL }}

    secrets:
      slack-token: ${{ secrets.SLACK_TOKEN }}

  build:
    needs: version
    runs-on:
      labels: [ self-hosted, linux, x64 ]
      group: heavy

    outputs:
      meta: ${{ toJSON(steps.meta.outputs) }}
      build: ${{ toJSON(steps.build.outputs) }}

    steps:
      - name: clone repo
        uses: actions/checkout@v3

      - name: install cosign
        uses: sigstore/cosign-installer@v3.1.2

      - name: forward proxy settings
        run: |
          echo "HTTP_PROXY=$HTTP_PROXY" >> $GITHUB_ENV
          echo "HTTPS_PROXY=$HTTPS_PROXY" >> $GITHUB_ENV
          echo "NO_PROXY=$NO_PROXY" >> $GITHUB_ENV

      - name: install buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            env.http_proxy=${{ env.HTTP_PROXY }}
            env.https_proxy=${{ env.HTTPS_PROXY }}
            "env.no_proxy='${{ env.NO_PROXY }}'"

      - name: login to container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ vars.HARBOR_REGISTRY }}
          username: ${{ vars.HARBOR_USER }}
          password: ${{ secrets.HARBOR_TOKEN }}

      - name: container metadata
        uses: docker/metadata-action@v5
        id: meta
        with:
          images: |
            ${{ vars.HARBOR_REGISTRY }}/github-workflows/whalesay
          tags: |
            type=ref,event=pr

      - name: build and push
        uses: docker/build-push-action@v5
        id: build
        with:
          file: containers/whalesay/Dockerfile
          context: containers/whalesay
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: true
          github-token: ${{ github.token }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: true

      - name: cosign image with key
        run: |
          cosign sign --yes --key env://COSIGN_PRIVATE_KEY "${TAGS}@${DIGEST}"
        env:
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build.outputs.digest }}

      - name: cosign verify image
        if: inputs.cosign-public-key != ''
        env:
          COSIGN_PUBLIC_KEY: ${{ vars.COSIGN_PUBLIC_KEY }}
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build.outputs.digest }}
        run: |
          cosign verify --key env://COSIGN_PUBLIC_KEY "${TAGS}@${DIGEST}"

      - name: annotate the ci run with container tags
        run: >-
          echo "::notice title=Job: ${{ github.job }} / ${{ inputs.job-name }}::%0A
          Pushed PR container assets!%0A
          - %0A
          docker pull ${{ steps.meta.outputs.tags }}%0A
          ${{ steps.build.outputs.digest }}"

      - name: update slack thread failure
        uses: archive/github-actions-slack@v2.7.0
        continue-on-error: true
        if: failure()
        with:
          slack-bot-user-oauth-access-token: ${{ secrets.SLACK_TOKEN }}
          slack-channel: ${{ vars.SLACK_CHANNEL }}
          slack-text: |
            :no_entry: ${{ github.repository }} / ${{ github.job }} / ${{ inputs.job-name }}\n
            <https://github.com/${{ github.repository }}/pull/${{ github.event.pull_request.number }}|:octocat: Pull Request>\n
            <https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}|:book: CI Logs>

  retag:
    needs: [version, build]
    runs-on:
      labels: [ self-hosted, linux, x64 ]
      group: heavy

    steps:
      - name: install cosign
        uses: sigstore/cosign-installer@v3.1.2

      - name: forward proxy settings
        run: |
          echo "HTTP_PROXY=$HTTP_PROXY" >> $GITHUB_ENV
          echo "HTTPS_PROXY=$HTTPS_PROXY" >> $GITHUB_ENV
          echo "NO_PROXY=$NO_PROXY" >> $GITHUB_ENV

      - name: install buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            env.http_proxy=${{ env.HTTP_PROXY }}
            env.https_proxy=${{ env.HTTPS_PROXY }}
            "env.no_proxy='${{ env.NO_PROXY }}'"

      - name: login to container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ vars.HARBOR_REGISTRY }}
          username: ${{ vars.HARBOR_USER }}
          password: ${{ secrets.HARBOR_TOKEN }}

      - name: retag container
        run: docker buildx imagetools create -t ${{ vars.HARBOR_REGISTRY }}/github-workflows/whalesay:v1.0.0-test ${{ vars.HARBOR_REGISTRY }}/github-workflows/whalesay@${{ fromJSON(needs.build.outputs.build).digest }}
