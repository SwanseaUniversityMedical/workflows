on:
  workflow_call:
    inputs:

      job-name:
        description: "Job name to display on Slack messages."
        required: true
        type: string

      build-command:
        description: "Command to build the container named $IMAGE."
        required: true
        type: string

      test-command:
        description: "Command to test the container named $IMAGE."
        default: ''
        type: string

      container-registry:
        description: "URL of the container registry."
        required: true
        type: string

      container-registry-user:
        description: "Username for the container registry."
        required: true
        type: string

      container-registry-project:
        description: "Project within container registry."
        required: true
        type: string

      container-registry-repo:
        description: "Repo within container registry project."
        required: true
        type: string

      container-tag-prefix:
        description: "Prefix to use when tagging container"
        default: ''
        type: string

      container-tag-suffix:
        description: "Suffix to use when tagging container"
        default: ''
        type: string

      release-rules:
        description: "JSON list of rule dicts for what commit types trigger releases."
        default: |
          [
            {"type": "major", "release": "major"},
            {"type": "minor", "release": "minor"},
            {"type": "patch", "release": "patch"},
            {"type": "no-release", "release": false},

            {"type": "chore", "release": "patch"},
            {"type": "refactor", "release": "patch"},
            {"type": "style", "release": "patch"},

            {"type": "docs", "release": false},
            {"type": "test", "release": false},
            {"type": "ci", "release": false},

            {"type": "feat", "release": "minor"},

            {"type": "revert", "release": "patch"},
            {"type": "perf", "release": "patch"},
            {"type": "fix", "release": "patch"},
            {"type": "build", "release": "patch"},
          ]
        type: string

      release-branches:
        description: "JSON list of regex branch filters."
        default: |
          [
            '+([0-9])?(.{+([0-9]),x}).x',
            'main'
          ]
        type: string

      release-tag-format:
        description: "Semantic-release Github release tag format."
        default: '${version}'
        type: string

      slack-channel:
        description: "ID of the Slack channel to post updates to."
        required: true
        type: string

      status-failure:
        description: "Failure status for the message header."
        default: ':no_entry:'
        type: string

      cosign-public-key:
        description: "Public key for cosigning images."
        required: false
        type: string

    secrets:

      slack-token:
        description: "Authentication token for Slack."
        required: true

      container-registry-token:
        description: "Authentication token for the container registry."
        required: true

      cosign-private-key:
        description: "Private key for cosigning images."
        required: false

      cosign-password:
        description: "Private key password for cosigning images."
        required: false

    outputs:

      digest:
        description: "Docker pull URI with digest."
        value: ${{ jobs.build.outputs.digest }}

      rc-tag:
        description: "Docker pull URI with rc tag."
        value: ${{ jobs.build.outputs.rc-tag }}


jobs:
  version:
    # Determine if a release should happen and what its version would be
    uses: ./.github/workflows/version.yaml
    with:
      job-name: ${{ inputs.job-name }}
      release-tag-format: ${{ inputs.release-tag-format}}
      release-rules: ${{ inputs.release-rules }}
      release-branches: ${{ inputs.release-branches }}
      slack-channel: ${{ inputs.slack-channel }}

    secrets:
      slack-token: ${{ secrets.slack-token }}

  build:
    # Build the container and push it as :rc-1.0.0
    needs: version
    if: fromJSON(needs.version.outputs.release).new-release-published == 'true'
    uses: ./.github/workflows/build-release-container.yaml
    with:
      job-name: ${{ inputs.job-name }}
      release-version: ${{ fromJSON(needs.version.outputs.release).release-version }}
      container-registry: ${{ inputs.container-registry }}
      container-registry-user: ${{ inputs.container-registry-user }}
      container-registry-project: ${{ inputs.container-registry-project }}
      container-registry-repo: ${{ inputs.container-registry-repo }}
      container-tag-prefix: ${{ inputs.container-tag-prefix }}
      container-tag-suffix: ${{ inputs.container-tag-suffix }}
      cosign-public-key: ${{ inputs.cosign-public-key }}
      slack-channel: ${{ inputs.slack-channel }}
      status-failure: ${{ inputs.status-failure }}
      command: ${{ inputs.build-command }}

    secrets:
      cosign-private-key: ${{ secrets.cosign-private-key }}
      cosign-password: ${{ secrets.cosign-password }}
      container-registry-token: ${{ secrets.container-registry-token }}
      slack-token: ${{ secrets.slack-token }}

  test:
    # Test the container
    needs: build
    uses: ./.github/workflows/test-release-container.yaml
    if: ${{ inputs.test-command != '' }}
    with:
      job-name: ${{ inputs.job-name }}
      container-registry: ${{ inputs.container-registry }}
      container-registry-user: ${{ inputs.container-registry-user }}
      container-registry-digest: ${{ needs.build.outputs.digest }}
      cosign-public-key: ${{ inputs.cosign-public-key }}
      slack-channel: ${{ inputs.slack-channel }}
      status-failure: ${{ inputs.status-failure }}
      command: ${{ inputs.test-command }}

    secrets:
      container-registry-token: ${{ secrets.container-registry-token }}
      slack-token: ${{ secrets.slack-token }}

  release-container:
    # Release the container re-tagging it as :1.0.0
    needs:
      - version
      - build
      - test
    uses: ./.github/workflows/release-container.yaml
    if: ${{ always() && ((needs.test.result == 'skipped' || needs.test.result == 'success') && needs.build.result == 'success') }}
    with:
      job-name: ${{ inputs.job-name }}
      release-info: ${{ needs.version.outputs.release }}
      container-registry: ${{ inputs.container-registry }}
      container-registry-user: ${{ inputs.container-registry-user }}
      container-registry-digest: ${{ needs.build.outputs.digest }}
      container-registry-project: ${{ inputs.container-registry-project }}
      container-registry-repo: ${{ inputs.container-registry-repo }}
      container-tag-prefix: ${{ inputs.container-tag-prefix }}
      container-tag-suffix: ${{ inputs.container-tag-suffix }}
      cosign-public-key: ${{ inputs.cosign-public-key }}
      slack-channel: ${{ inputs.slack-channel }}
      status-failure: ${{ inputs.status-failure }}

    secrets:
      cosign-private-key: ${{ secrets.cosign-private-key }}
      cosign-password: ${{ secrets.cosign-password }}
      slack-token: ${{ secrets.slack-token }}
      container-registry-token: ${{ secrets.container-registry-token }}
