name: Release

on:
  push:
    branches:
      - ci/create-on-release-container-using-reusable-workflows
      - main

jobs:

  ######################################################################################################################
  # Pre-Tasks
  ######################################################################################################################

  slack:
    # Open a new PR thread on Slack for this CI run
    uses: ./.github/workflows/slack-release-thread.yaml
    with:
      slack-channel: ${{ vars.SLACK_CHANNEL }}
    secrets:
      slack-token: ${{ secrets.SLACK_TOKEN }}

  changes:
    # Detect which files have been changed on this PR's full history
    needs: slack
    uses: ./.github/workflows/changes.yaml
    with:
      slack-channel: ${{ vars.SLACK_CHANNEL }}
      slack-thread: ${{ needs.slack.outputs.thread }}
      github-app-id: ${{ vars.APP_ID }}
      filters: |
        container-whalesay:
          - './.github/workflows/on-release.yaml'
          - './.github/workflows/slack-release-thread.yaml'
          - './.github/workflows/changes.yaml'
          - './.github/workflows/version.yaml'
          - './.github/workflows/build-release-container.yaml'
          - './.github/workflows/test-container.yaml'
          - './.github/workflows/release-container.yaml'
          - './containers/whalesay/**'
        chart-helloworld:
          - './.github/workflows/on-release.yaml'
          - './.github/workflows/slack-release-thread.yaml'
          - './.github/workflows/changes.yaml'
          - './.github/workflows/version.yaml'
          - './.github/workflows/build-release-chart.yaml'
          - './.github/workflows/test-chart.yaml'
          - './.github/workflows/release-chart.yaml'
          - './charts/helloworld/**'
    secrets:
      slack-token: ${{ secrets.SLACK_TOKEN }}
      github-app-private-key: ${{ secrets.APP_PRIVATE_KEY }}

  ######################################################################################################################
  # Container Whalesay Tasks
  ######################################################################################################################

#  version-container-whalesay:
#    # Determine if a release should happen and what its version would be
#    needs:
#      - slack
#      - changes
#    if: fromJSON(needs.changes.outputs.changes).container-whalesay == 'true'
#    uses: ./.github/workflows/version.yaml
#    with:
#      job-name: container-whalesay
#      release-tag-format: 'whalesay-${version}'
#      github-app-id: ${{ vars.APP_ID }}
#      slack-channel: ${{ vars.SLACK_CHANNEL }}
#      slack-thread: ${{ needs.slack.outputs.thread }}
#    secrets:
#      github-app-private-key: ${{ secrets.APP_PRIVATE_KEY }}
#      slack-token: ${{ secrets.SLACK_TOKEN }}

  container-whalesay:
    # Build the whalesay container and push it as :rc-1.0.0
    needs:
      - slack
    if: fromJSON(needs.version-container-whalesay.outputs.release).new-release-published == 'true'
    uses: ./.github/workflows/on-release-container.yaml
    with:
      job-name: container-whalesay
      container-registry: ${{ vars.HARBOR_REGISTRY }}
      github-app-id: ${{ vars.APP_ID }}
      container-registry-user: ${{ vars.HARBOR_USER }}
      container-registry-project: ${{ vars.HARBOR_PROJECT }}
      container-registry-repo: whalesay
      slack-channel: ${{ vars.SLACK_CHANNEL }}
      slack-thread: ${{ needs.slack.outputs.thread }}
      build-command: |
        docker build -t $IMAGE -f containers/whalesay/Dockerfile containers/whalesay
      test-command: |
        echo '0'
    secrets:
      container-registry-token: ${{ secrets.HARBOR_TOKEN }}
      slack-token: ${{ secrets.SLACK_TOKEN }}
      github-app-private-key: ${{ secrets.APP_PRIVATE_KEY }}

  test-container-whalesay:
    # Test the whalesay container
    needs:
      - slack
      - container-whalesay
    uses: ./.github/workflows/test-container.yaml
    with:
      job-name: container-whalesay
      container-registry: ${{ vars.HARBOR_REGISTRY }}
      container-registry-user: ${{ vars.HARBOR_USER }}
      container-registry-digest: ${{ needs.build-container-whalesay.outputs.digest }}
      slack-channel: ${{ vars.SLACK_CHANNEL }}
      slack-thread: ${{ needs.slack.outputs.thread }}
      command: |
        docker run $IMAGE cowsay boo
    secrets:
      container-registry-token: ${{ secrets.HARBOR_TOKEN }}
      slack-token: ${{ secrets.SLACK_TOKEN }}
      
#  release-container-whalesay:
#    # Release the whalesay container re-tagging it as :1.0.0
#    needs:
#      - slack
#      - version-container-whalesay
#      - build-container-whalesay
#      - test-container-whalesay
#    uses: ./.github/workflows/release-container.yaml
#    with:
#      job-name: container-whalesay
#      release-rules: ${{ needs.version-container-whalesay.outputs.release-rules }}
#      release-branches: ${{ needs.version-container-whalesay.outputs.release-branches }}
#      release-tag-format: ${{ needs.version-container-whalesay.outputs.release-tag-format }}
#      container-registry: ${{ vars.HARBOR_REGISTRY }}
#      container-registry-user: ${{ vars.HARBOR_USER }}
#      container-registry-project: ${{ needs.build-container-whalesay.outputs.project }}
#      container-registry-repo: ${{ needs.build-container-whalesay.outputs.repo }}
#      container-registry-digest: ${{ needs.build-container-whalesay.outputs.digest }}
#      github-app-id: ${{ vars.APP_ID }}
#      slack-channel: ${{ vars.SLACK_CHANNEL }}
#      slack-thread: ${{ needs.slack.outputs.thread }}
#    secrets:
#      container-registry-token: ${{ secrets.HARBOR_TOKEN }}
#      github-app-private-key: ${{ secrets.APP_PRIVATE_KEY }}
#      slack-token: ${{ secrets.SLACK_TOKEN }}

  ######################################################################################################################
  # Chart HelloWorld Tasks
  ######################################################################################################################

  version-chart-helloworld:
    # Determine if a release should happen and what its version would be
    needs:
      - slack
      - changes
    if: fromJSON(needs.changes.outputs.changes).chart-helloworld == 'true'
    uses: ./.github/workflows/version.yaml
    with:
      job-name: chart-helloworld
      release-tag-format: 'helloworld-${version}'
      github-app-id: ${{ vars.APP_ID }}
      slack-channel: ${{ vars.SLACK_CHANNEL }}
      slack-thread: ${{ needs.slack.outputs.thread }}
    secrets:
      github-app-private-key: ${{ secrets.APP_PRIVATE_KEY }}
      slack-token: ${{ secrets.SLACK_TOKEN }}

  build-chart-helloworld:
    # Build the helloworld chart and push it as x.y.z-rc
    needs:
      - slack
      - version-chart-helloworld
    uses: ./.github/workflows/build-release-chart.yaml
    with:
      job-name: chart-helloworld
      release-version: ${{ fromJSON(needs.version-chart-helloworld.outputs.release).release-version }}
      chart-registry: ${{ vars.HARBOR_REGISTRY }}
      chart-registry-user: ${{ vars.HARBOR_USER }}
      chart-registry-project: ${{ vars.HARBOR_PROJECT }}
      chart-registry-repo: helloworld
      github-app-id: ${{ vars.APP_ID }}
      slack-channel: ${{ vars.SLACK_CHANNEL }}
      slack-thread: ${{ needs.slack.outputs.thread }}
      chart: charts/helloworld
    secrets:
      chart-registry-token: ${{ secrets.HARBOR_TOKEN }}
      github-app-private-key: ${{ secrets.APP_PRIVATE_KEY }}
      slack-token: ${{ secrets.SLACK_TOKEN }}

  test-chart-helloworld:
    # Test the helloworld chart
    needs:
      - slack
      - build-chart-helloworld
    uses: ./.github/workflows/test-chart.yaml
    with:
      job-name: chart-helloworld
      chart-registry: ${{ vars.HARBOR_REGISTRY }}
      chart-registry-user: ${{ vars.HARBOR_USER }}
      chart-registry-project: ${{ needs.build-chart-helloworld.outputs.project }}
      chart-registry-repo: ${{ needs.build-chart-helloworld.outputs.repo }}
      chart-registry-digest: ${{ needs.build-chart-helloworld.outputs.digest }}
      github-app-id: ${{ vars.APP_ID }}
      slack-channel: ${{ vars.SLACK_CHANNEL }}
      slack-thread: ${{ needs.slack.outputs.thread }}
      command: |
        helm template $CHART --values tests/charts/helloworld/values.yaml
    secrets:
      chart-registry-token: ${{ secrets.HARBOR_TOKEN }}
      github-app-private-key: ${{ secrets.APP_PRIVATE_KEY }}
      slack-token: ${{ secrets.SLACK_TOKEN }}

#  release-chart-helloworld:
#    # Release the helloworld chart re-tagging it as 1.0.0
#    needs:
#      - slack
#      - version-chart-helloworld
#      - build-chart-helloworld
#      - test-chart-helloworld
#    uses: ./.github/workflows/release-chart.yaml
#    with:
#      job-name: chart-helloworld
#      release-rules: ${{ needs.version-chart-helloworld.outputs.release-rules }}
#      release-branches: ${{ needs.version-chart-helloworld.outputs.release-branches }}
#      release-tag-format: ${{ needs.version-chart-helloworld.outputs.release-tag-format }}
#      chart-registry: ${{ vars.HARBOR_REGISTRY }}
#      chart-registry-user: ${{ vars.HARBOR_USER }}
#      chart-registry-project: ${{ needs.build-chart-helloworld.outputs.project }}
#      chart-registry-repo: ${{ needs.build-chart-helloworld.outputs.repo }}
#      chart-registry-digest: ${{ needs.build-chart-helloworld.outputs.digest }}
#      github-app-id: ${{ vars.APP_ID }}
#      slack-channel: ${{ vars.SLACK_CHANNEL }}
#      slack-thread: ${{ needs.slack.outputs.thread }}
#    secrets:
#      chart-registry-token: ${{ secrets.HARBOR_TOKEN }}
#      github-app-private-key: ${{ secrets.APP_PRIVATE_KEY }}
#      slack-token: ${{ secrets.SLACK_TOKEN }}

  ######################################################################################################################
  # Post-Tasks
  ######################################################################################################################

  bump-versions:
    runs-on: [self-hosted, linux, x64]
    needs:
      - slack
      - changes
      #- version-container-whalesay
      - container-whalesay
      - test-container-whalesay
      #- release-container-whalesay
      - version-chart-helloworld
      - build-chart-helloworld
      - test-chart-helloworld
      #- release-chart-helloworld

    steps:
      - name: bump versions
        run: |
          echo "bump"

  slack-update:
    # Update the original Slack message with the final workflow status
    # WARNING! ALL UPSTREAM JOBS MUST BE DECLARED HERE TO REPORT FAILURES CORRECTLY!
    needs:
      - slack
      - changes
      #- version-container-whalesay
      - container-whalesay
      - test-container-whalesay
      #- release-container-whalesay
      - version-chart-helloworld
      - build-chart-helloworld
      - test-chart-helloworld
      #- release-chart-helloworld
      - bump-versions
    uses: ./.github/workflows/slack-release-thread.yaml
    if: always()
    with:
      slack-channel: ${{ vars.SLACK_CHANNEL }}
      slack-thread: ${{ needs.slack.outputs.thread }}
      status: ${{ contains(join(needs.*.result, ','), 'failure') && ':no_entry:' || ':white_check_mark:' }}
    secrets:
      slack-token: ${{ secrets.SLACK_TOKEN }}
