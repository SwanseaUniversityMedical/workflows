name: Release

on:
  push:
    branches:
      - main

jobs:

  ######################################################################################################################
  # Pre-Tasks
  ######################################################################################################################

  slack:
    # Open a new PR thread on Slack for this CI run
    uses: ./.github/workflows/slack-release-thread.yaml
    with:
      slack-channel: ${{ vars.SLACK_CHANNEL }}
    secrets:
      slack-token: ${{ secrets.SLACK_TOKEN }}

  changes:
    # Detect which files have been changed on this PR's full history
    needs: slack
    uses: ./.github/workflows/changes.yaml
    with:
      slack-channel: ${{ vars.SLACK_CHANNEL }}
      slack-thread: ${{ needs.slack.outputs.thread }}
      github-app-id: ${{ vars.APP_ID }}
      filters: |
        container-whalesay:
          - './.github/workflows/on-release.yaml'
          - './.github/workflows/on-release-container.yaml'
          - './.github/workflows/slack-release-thread.yaml'
          - './.github/workflows/changes.yaml'
          - './.github/workflows/version.yaml'
          - './.github/workflows/build-release-container.yaml'
          - './.github/workflows/test-container.yaml'
          - './.github/workflows/release-container.yaml'
          - './containers/whalesay/**'
        container-whalesay2:
          - './.github/workflows/on-release.yaml'
          - './.github/workflows/on-release-container.yaml'
          - './.github/workflows/slack-release-thread.yaml'
          - './.github/workflows/changes.yaml'
          - './.github/workflows/version.yaml'
          - './.github/workflows/build-release-container.yaml'
          - './.github/workflows/test-container.yaml'
          - './.github/workflows/release-container.yaml'
          - './containers/whalesay2/**'
        chart-helloworld:
          - './.github/workflows/on-release.yaml'
          - './.github/workflows/on-release-chart.yaml'
          - './.github/workflows/slack-release-thread.yaml'
          - './.github/workflows/changes.yaml'
          - './.github/workflows/version.yaml'
          - './.github/workflows/build-release-chart.yaml'
          - './.github/workflows/test-chart.yaml'
          - './.github/workflows/release-chart.yaml'
          - './charts/helloworld/**'
    secrets:
      slack-token: ${{ secrets.SLACK_TOKEN }}
      github-app-private-key: ${{ secrets.APP_PRIVATE_KEY }}

  ######################################################################################################################
  # Container Whalesay Tasks
  ######################################################################################################################

  container-whalesay:
    # Build the whalesay container and push it as :rc-1.0.0
    needs:
      - slack
      - changes
    if: fromJSON(needs.changes.outputs.changes).container-whalesay == 'true'
    uses: ./.github/workflows/on-release-container.yaml
    with:
      job-name: container-whalesay
      container-registry: ${{ vars.HARBOR_REGISTRY }}
      github-app-id: ${{ vars.APP_ID }}
      container-registry-user: ${{ vars.HARBOR_USER }}
      container-registry-project: ${{ vars.HARBOR_PROJECT }}
      container-registry-repo: whalesay
      release-tag-format: 'whalesay-${version}'
      slack-channel: ${{ vars.SLACK_CHANNEL }}
      slack-thread: ${{ needs.slack.outputs.thread }}
      build-command: |
        docker build -t $IMAGE -f containers/whalesay/Dockerfile containers/whalesay
      test-command: |
        echo '0'
    secrets:
      container-registry-token: ${{ secrets.HARBOR_TOKEN }}
      slack-token: ${{ secrets.SLACK_TOKEN }}
      github-app-private-key: ${{ secrets.APP_PRIVATE_KEY }}

  container-whalesay2:
    # Build the whalesay2 container and push it as :rc-1.0.0
    needs:
      - slack
      - changes
    if: fromJSON(needs.changes.outputs.changes).container-whalesay2 == 'true'
    uses: ./.github/workflows/on-release-container.yaml
    with:
      job-name: container-whalesay2
      container-registry: ${{ vars.HARBOR_REGISTRY }}
      github-app-id: ${{ vars.APP_ID }}
      container-registry-user: ${{ vars.HARBOR_USER }}
      container-registry-project: ${{ vars.HARBOR_PROJECT }}
      container-registry-repo: whalesay2
      release-tag-format: 'whalesay2-${version}'
      slack-channel: ${{ vars.SLACK_CHANNEL }}
      slack-thread: ${{ needs.slack.outputs.thread }}
      build-command: |
        docker build -t $IMAGE -f containers/whalesay2/Dockerfile containers/whalesay2
      test-command: |
        echo '0'
      release-branches: 'feat/utilize-concurrency-to-limit-release-steps-to-run-individually-with-a-concurrency-group'
    secrets:
      container-registry-token: ${{ secrets.HARBOR_TOKEN }}
      slack-token: ${{ secrets.SLACK_TOKEN }}
      github-app-private-key: ${{ secrets.APP_PRIVATE_KEY }}

  ######################################################################################################################
  # Chart HelloWorld Tasks
  ######################################################################################################################

  chart-helloworld:
    # Build the helloworld chart and push it as x.y.z-rc
    needs:
      - slack
      - changes
    if: fromJSON(needs.changes.outputs.changes).chart-helloworld == 'true'
    uses: ./.github/workflows/on-release-chart.yaml
    with:
      job-name: chart-helloworld
      chart-registry: ${{ vars.HARBOR_REGISTRY }}
      chart-registry-user: ${{ vars.HARBOR_USER }}
      chart-registry-project: ${{ vars.HARBOR_PROJECT }}
      chart-registry-repo: helloworld
      release-tag-format: 'helloworld-${version}'
      github-app-id: ${{ vars.APP_ID }}
      slack-channel: ${{ vars.SLACK_CHANNEL }}
      slack-thread: ${{ needs.slack.outputs.thread }}
      chart: charts/helloworld
      test-command: |
        helm template $CHART --values charts/helloworld/values.yaml
    secrets:
      chart-registry-token: ${{ secrets.HARBOR_TOKEN }}
      github-app-private-key: ${{ secrets.APP_PRIVATE_KEY }}
      slack-token: ${{ secrets.SLACK_TOKEN }}

  ######################################################################################################################
  # Post-Tasks
  ######################################################################################################################

  slack-update:
    # Update the original Slack message with the final workflow status
    # WARNING! ALL UPSTREAM JOBS MUST BE DECLARED HERE TO REPORT FAILURES CORRECTLY!
    needs:
      - slack
      - changes
      - container-whalesay
      - container-whalesay2
      - chart-helloworld

    uses: ./.github/workflows/slack-release-thread.yaml
    if: always()
    with:
      slack-channel: ${{ vars.SLACK_CHANNEL }}
      slack-thread: ${{ needs.slack.outputs.thread }}
      status: ${{ contains(join(needs.*.result, ','), 'failure') && ':no_entry:' || ':white_check_mark:' }}
    secrets:
      slack-token: ${{ secrets.SLACK_TOKEN }}