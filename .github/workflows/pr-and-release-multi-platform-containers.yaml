on:
  workflow_call:
    inputs:

      job-name:
        description: "Name of the release asset."
        required: true
        type: string

      comment-pr:
        description: "PR comment creation and update."
        default: "false"
        type: string

      comment-release:
        description: "Release comment creation and update."
        default: "true"
        type: string

      build-file:
        description: "Path to the container file."
        required: true
        type: string

      build-context:
        description: "Path to the build root dir."
        default: '.'
        type: string

      build-args:
        description: "KEY=VALUE build args as a multiline string."
        default: ''
        type: string

      build-secret-envs:
        description: "KEY=VALUE build secrets from env vars as a multiline string."
        default: ''
        type: string

      build-secret-files:
        description: "KEY=VALUE build secrets from files as a multiline string."
        default: ''
        type: string

      test-flags:
        description: "Arguments passed to docker run."
        default: ''
        type: string

      test-args:
        description: "Arguments passed to the container."
        default: ''
        type: string

      registry:
        description: "URL of the container registry."
        required: true
        type: string

      registry-user:
        description: "Username for the container registry."
        required: true
        type: string

      registry-repo:
        description: "Repo within container registry project."
        required: true
        type: string

      release-tag-format:
        description: "Semantic-release Github release tag format."
        default: '${version}'
        type: string

      registry-extra-tag-command:
        description: "Extra tag to push release container."
        default: ''
        type: string

      cosign-public-key:
        description: "Public key for cosigning images."
        required: false
        type: string
      
      platforms:
        description: "Comma-separated list of platforms to build for (e.g., linux/amd64,linux/arm64)"
        default: "linux/amd64"
        type: string
        required: false

    secrets:

      registry-token:
        description: "Authentication token for the container registry."
        required: true

      cosign-private-key:
        description: "Private key for cosigning images."
        required: false

      cosign-password:
        description: "Private key password for cosigning images."
        required: false

      build-secrets:
        description: "KEY=VALUE build secrets as a multiline string."
        required: false

jobs:
  prepare-platforms:
    runs-on:
      labels: [ self-hosted, linux, x64 ]
      group: light
    steps:
      - name: process platforms
        run: |
          platforms="${{ inputs.platforms }}"
          output_platforms="[]"
          if [[ "$platforms" == *"arm64"* ]]; then
            output_platforms+="${platforms//\//, }"
          fi
          if [[ "$platforms" == *"amd64"* ]]; then
            output_platforms+="${platforms//amd64/x64,}"
          fi
          # output will be a list of strings 'linux, x64' and/or 'linux, arm64'
          echo "PLATFORMS=$output_platforms" >> $GITHUB_OUTPUT

  container:
    needs: prepare-platforms
    strategy:
      matrix:
        platform: ${{ fromJson(needs.prepare-platforms.outputs.PLATFORMS) }}
    runs-on:
      labels: [ self-hosted, ${{ matrix.platform }} ]
      group: default
    steps:
      - uses: SwanseaUniversityMedical/workflows/.github/actions/pr-and-release-container@v3.0.2-pr-and-release-container-action
        with:
          name: ${{ inputs.job-name }}
          comment-pr: ${{ inputs.comment-pr }}
          comment-release: ${{ inputs.comment-release }}
          registry: ${{ inputs.registry }}
          registry-user: ${{ inputs.registry-user }}
          registry-repo: ${{ inputs.registry-repo }}
          registry-token: ${{ secrets.registry-token }}
          registry-extra-tag-command: ${{ inputs.registry-extra-tag-command }}
          release-tag-format: ${{ inputs.release-tag-format }}
          build-file: ${{ inputs.build-file }}
          build-context: ${{ inputs.build-context }}
          build-args: ${{ inputs.build-args }}
          build-secrets: ${{ secrets.build-secrets }}
          build-secret-envs: ${{ inputs.build-secret-envs }}
          build-secret-files: ${{ inputs.build-secret-files }}
          platforms: ${{ inputs.platforms }}
          test-flags: ${{ inputs.test-flags }}
          test-args: ${{ inputs.test-args }}
          cosign-public-key: ${{ inputs.cosign-public-key }}
          cosign-private-key: ${{ secrets.cosign-private-key }}
          cosign-password: ${{ secrets.cosign-password }}
