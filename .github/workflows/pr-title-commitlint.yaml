on:
  workflow_call:
    inputs:

      error-label:
        description: "Label to add on bad lints."
        default: ":black_nib: Bad PR Title"
        type: string

      comment-header:
        description: "Header line for the PR comment."
        default: ":black_nib: Commitlint PR Title"
        type: string

      config:
        description: "Path to the commitlint config file within the repo."
        default: ".github/commitlint.config.mjs"
        type: string

jobs:
  lint:
    runs-on:
      labels: [self-hosted, linux, x64]
      group: light
    steps:
      - name: clone config from repo
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            ${{ inputs.config }}

      - name: cache node modules
        uses: actions/cache@v4.0.2
        with:
          path: ~/.npm
          key: ${{ github.workflow }}-commitlint

      - name: install node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: install commitlint
        shell: bash
        run: |
          npm install --save-dev @commitlint/config-conventional @commitlint/cli

      - name: lint pr title
        id: commitlint
        shell: bash
        run: |
          echo "$TITLE" | npx commitlint --config="$CONFIG"
        env:
          TITLE: ${{ github.event.pull_request.title }}
          CONFIG: ${{ inputs.config }}

      - name: find pr comment
        uses: peter-evans/find-comment@v3
        id: find-pr-comment
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body-includes: ${{ inputs.comment-header }}
          comment-author: ${{ github.actor }}

      - name: create or update pr comment on bad lint
        uses: peter-evans/create-or-update-comment@v4
        if: always() && steps.commitlint.outcome == 'failure'
        with:
          comment-id: ${{ steps.find-pr-comment.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          edit-mode: replace
          body: |
            ### :x: ${{ inputs.comment-header }}
            ```
            ${{ steps.commitlint.outputs.stderr }}
            ```

      - name: create or update pr comment on successful lint
        uses: peter-evans/create-or-update-comment@v4
        if: always() && steps.commitlint.outcome == 'success'
        with:
          comment-id: ${{ steps.find-pr-comment.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          edit-mode: replace
          body: |
            ### :heavy_check_mark: ${{ inputs.comment-header }}

      - name: add error label on bad lint
        uses: actions/github-script@v7.0.1
        if: always() && steps.commitlint.outcome == 'failure'
        with:
          script: |
            github.rest.issues.addLabels({
              issue_number: ${{ github.event.pull_request.number }},
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ["${{ inputs.error-label }}"]
            })

      - name: remove error label on successful lint
        uses: actions/github-script@v7.0.1
        if: always() && steps.commitlint.outcome == 'success'
        continue-on-error: true
        with:
          script: |
            github.rest.issues.removeLabel({
              issue_number: ${{ github.event.pull_request.number }},
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: "${{ inputs.error-label }}"
            })
