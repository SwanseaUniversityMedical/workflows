name: PR Update

on:
  pull_request:

env:
  WHALESAY_IMAGE: ${{ vars.HARBOR_REGISTRY }}/${{ vars.HARBOR_PROJECT }}/whalesay

jobs:

  slack:
    runs-on: [self-hosted, linux, x64]

    outputs:
      thread: ${{ fromJson(steps.slack.outputs.slack-result).response.message.ts }}

    steps:
      - name: create slack thread
        uses: archive/github-actions-slack@v2.7.0
        id: slack
        with:
          slack-bot-user-oauth-access-token: ${{ secrets.SLACK_TOKEN }}
          slack-channel: ${{ vars.SLACK_CHANNEL }}
          slack-text: |
            Starting - ${{ github.workflow }} - run ${{ github.run_id }} - on commit ${{ github.ref }} ${{ github.sha }} ...

            ```
            ${{ github.event.head_commit.message }}
            ```

            [Logs](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})

  changes:
    needs: slack

    runs-on: [self-hosted, linux, x64]

    outputs:
      container-whalesay: ${{ steps.changes.outputs.container-whalesay }}

    steps:
      - name: clone repo
        uses: actions/checkout@v3

      - name: generate token
        id: generate-token
        uses: tibdex/github-app-token@v1.8.0
        with:
          app_id: ${{ vars.APP_ID }}
          private_key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: detect changed files
        uses: dorny/paths-filter@v2
        id: changes
        with:
          token: ${{ steps.generate-token.outputs.token }}
          filters: |
            container-whalesay:
              - './.github/workflows/pr.yaml'
              - './tests/container/**'

  build-container-whalesay:
    needs: changes
    if: needs.changes.outputs.container-whalesay == 'true'

    runs-on: [self-hosted, linux, x64]

    outputs:
      image: ${{ steps.digest.outputs.digest }}

    steps:
      - name: get short commit sha
        run: |
          echo "GITHUB_SHORT_SHA=`echo ${{ github.event.pull_request.head.sha }} | cut -c1-7`" >> $GITHUB_ENV

      - name: create pr tag
        run: |
          echo "PR_TAG=pr-${{ github.event.pull_request.number }}" >> $GITHUB_ENV  

      - name: create pr-commit tag
        run: |
          echo "PR_COMMIT_TAG=${{ env.PR_TAG }}-${{ env.GITHUB_SHORT_SHA }}" >> $GITHUB_ENV  

      - name: clone repo
        uses: actions/checkout@v3

      - name: login to container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ vars.HARBOR_REGISTRY }}
          username: ${{ vars.HARBOR_USER }}
          password: ${{ secrets.HARBOR_TOKEN }}

      - name: pull container
        run: |
          docker pull ${{ env.WHALESAY_IMAGE }}:${{ env.PR_TAG }}

      - name: build container
        run: |
          docker build -t image -f tests/container/Dockerfile tests/container

      - name: tag container
        run: |
          docker tag image ${{ env.WHALESAY_IMAGE }}:${{ env.PR_TAG }}
          docker tag image ${{ env.WHALESAY_IMAGE }}:${{ env.PR_COMMIT_TAG }}

      - name: push container
        run: |
          docker push ${{ env.WHALESAY_IMAGE }}:${{ env.PR_TAG }}
          docker push ${{ env.WHALESAY_IMAGE }}:${{ env.PR_COMMIT_TAG }}

      - name: container digest
        id: digest
        run: |
          echo "digest=`docker inspect --format='{{index .RepoDigests 0}}' ${{ env.WHALESAY_IMAGE }}:${{ env.PR_COMMIT_TAG }}`" >> "$GITHUB_OUTPUT"

      - name: generate token
        id: generate-token
        uses: tibdex/github-app-token@v1.8.0
        with:
          app_id: ${{ vars.APP_ID }}
          private_key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: comment the image tags to the pr
        uses: actions/github-script@v6
        with:
          github-token: ${{ steps.generate-token.outputs.token }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '```\n${{ env.WHALESAY_IMAGE }}:${{ env.PR_TAG }}\n${{ env.WHALESAY_IMAGE }}:${{ env.PR_COMMIT_TAG }}\n${{ steps.digest.outputs.digest }}\n```\n\n:robot: :whale2: :package: :passenger_ship:\n'
            })

  test-container-whalesay:
    needs: build-container-whalesay

    runs-on: [self-hosted, linux, x64]

    steps:
      - name: login to container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ vars.HARBOR_REGISTRY }}
          username: ${{ vars.HARBOR_USER }}
          password: ${{ secrets.HARBOR_TOKEN }}

      - name: pull container
        run: |
          docker pull ${{ needs.build-container-whalesay.outputs.image }}

      - name: test container
        run: |
          docker run \
            ${{ needs.build-container-whalesay.outputs.image }} \
              cowsay boo
