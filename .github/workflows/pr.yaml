name: PR Update

on:
  pull_request:

env:
  WHALESAY_IMAGE: ${{ vars.HARBOR_REGISTRY }}/${{ vars.HARBOR_PROJECT }}/whalesay

jobs:

  slack:
    name: slack
    uses: ./.github/workflows/slack-pr-thread.yaml
    with:
      slack-channel: ${{ vars.SLACK_CHANNEL }}
    secrets:
      slack-token: ${{ secrets.SLACK_TOKEN }}

  changes:
    name: changes
    needs: slack
    uses: ./.github/workflows/changes.yaml
    with:
      slack-channel: ${{ vars.SLACK_CHANNEL }}
      slack-thread: ${{ needs.slack.outputs.thread }}
      github-app-id: ${{ vars.APP_ID }}
      filters: |
        container-whalesay:
          - './.github/workflows/pr.yaml'
          - './tests/container/**'
    secrets:
      slack-token: ${{ secrets.SLACK_TOKEN }}
      github-app-private-key: ${{ secrets.APP_PRIVATE_KEY }}

  build-container-whalesay:
    needs: [slack, changes]
    if: fromJSON(needs.changes.outputs.changes).container-whalesay == 'true'

    runs-on: [self-hosted, linux, x64]

    outputs:
      image: ${{ steps.digest.outputs.digest }}

    steps:
      - name: update slack thread
        uses: archive/github-actions-slack@v2.7.0
        id: slack
        with:
          slack-bot-user-oauth-access-token: ${{ secrets.SLACK_TOKEN }}
          slack-channel: ${{ vars.SLACK_CHANNEL }}
          slack-optional-thread_ts: ${{ needs.slack.outputs.thread }}
          slack-text: |
            :hammer_and_wrench: job: ${{ github.job }}

      - name: get short commit sha
        run: |
          echo "GITHUB_SHORT_SHA=`echo ${{ github.event.pull_request.head.sha }} | cut -c1-7`" >> $GITHUB_ENV

      - name: create pr tag
        run: |
          echo "PR_TAG=pr-${{ github.event.pull_request.number }}" >> $GITHUB_ENV  

      - name: create pr-commit tag
        run: |
          echo "PR_COMMIT_TAG=${{ env.PR_TAG }}-${{ env.GITHUB_SHORT_SHA }}" >> $GITHUB_ENV  

      - name: clone repo
        uses: actions/checkout@v3

      - name: login to container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ vars.HARBOR_REGISTRY }}
          username: ${{ vars.HARBOR_USER }}
          password: ${{ secrets.HARBOR_TOKEN }}

      - name: pull container
        run: |
          docker pull ${{ env.WHALESAY_IMAGE }}:${{ env.PR_TAG }} || true

      - name: build container
        run: |
          docker build -t image -f tests/container/Dockerfile tests/container

      - name: tag container
        run: |
          docker tag image ${{ env.WHALESAY_IMAGE }}:${{ env.PR_TAG }}
          docker tag image ${{ env.WHALESAY_IMAGE }}:${{ env.PR_COMMIT_TAG }}

      - name: push container
        run: |
          docker push ${{ env.WHALESAY_IMAGE }}:${{ env.PR_TAG }}
          docker push ${{ env.WHALESAY_IMAGE }}:${{ env.PR_COMMIT_TAG }}

      - name: container digest
        id: digest
        run: |
          echo "digest=`docker inspect --format='{{index .RepoDigests 0}}' ${{ env.WHALESAY_IMAGE }}:${{ env.PR_COMMIT_TAG }}`" >> "$GITHUB_OUTPUT"

      - name: generate token
        id: generate-token
        uses: tibdex/github-app-token@v1.8.0
        with:
          app_id: ${{ vars.APP_ID }}
          private_key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: comment the image tags to the pr
        uses: actions/github-script@v6
        with:
          github-token: ${{ steps.generate-token.outputs.token }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '```\ndocker pull ${{ env.WHALESAY_IMAGE }}:${{ env.PR_TAG }}\ndocker pull ${{ env.WHALESAY_IMAGE }}:${{ env.PR_COMMIT_TAG }}\ndocker pull ${{ steps.digest.outputs.digest }}\n```\n\n:robot: :whale2: :package: :passenger_ship:\n'
            })

      - name: update slack thread success
        uses: archive/github-actions-slack@v2.7.0
        with:
          slack-bot-user-oauth-access-token: ${{ secrets.SLACK_TOKEN }}
          slack-channel: ${{ vars.SLACK_CHANNEL }}
          slack-function: update-message
          slack-update-message-ts: ${{ fromJson(steps.slack.outputs.slack-result).response.message.ts }}
          slack-update-message-text: |
            :white_check_mark: job: ${{ github.job }}
            
            ```
            docker pull ${{ env.WHALESAY_IMAGE }}:${{ env.PR_TAG }}
            docker pull ${{ env.WHALESAY_IMAGE }}:${{ env.PR_COMMIT_TAG }}
            docker pull ${{ steps.digest.outputs.digest }}
            ```

      - name: update slack thread failure
        uses: archive/github-actions-slack@v2.7.0
        if: failure()
        with:
          slack-bot-user-oauth-access-token: ${{ secrets.SLACK_TOKEN }}
          slack-channel: ${{ vars.SLACK_CHANNEL }}
          slack-function: update-message
          slack-update-message-ts: ${{ fromJson(steps.slack.outputs.slack-result).response.message.ts }}
          slack-update-message-text: |
            :no_entry: job: ${{ github.job }}

  test-container-whalesay:
    needs: [slack, build-container-whalesay]

    runs-on: [self-hosted, linux, x64]

    steps:
      - name: update slack thread
        uses: archive/github-actions-slack@v2.7.0
        id: slack
        with:
          slack-bot-user-oauth-access-token: ${{ secrets.SLACK_TOKEN }}
          slack-channel: ${{ vars.SLACK_CHANNEL }}
          slack-optional-thread_ts: ${{ needs.slack.outputs.thread }}
          slack-text: |
            :hammer_and_wrench: job: ${{ github.job }}

      - name: login to container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ vars.HARBOR_REGISTRY }}
          username: ${{ vars.HARBOR_USER }}
          password: ${{ secrets.HARBOR_TOKEN }}

      - name: pull container
        run: |
          docker pull ${{ needs.build-container-whalesay.outputs.image }}

      - name: test container
        run: |
          docker run \
            ${{ needs.build-container-whalesay.outputs.image }} \
              cowsay boo

      - name: update slack thread success
        uses: archive/github-actions-slack@v2.7.0
        if: success()
        with:
          slack-bot-user-oauth-access-token: ${{ secrets.SLACK_TOKEN }}
          slack-channel: ${{ vars.SLACK_CHANNEL }}
          slack-function: update-message
          slack-update-message-ts: ${{ fromJson(steps.slack.outputs.slack-result).response.message.ts }}
          slack-update-message-text: |
            :white_check_mark: job: ${{ github.job }}

      - name: update slack thread failure
        uses: archive/github-actions-slack@v2.7.0
        if: failure()
        with:
          slack-bot-user-oauth-access-token: ${{ secrets.SLACK_TOKEN }}
          slack-channel: ${{ vars.SLACK_CHANNEL }}
          slack-function: update-message
          slack-update-message-ts: ${{ fromJson(steps.slack.outputs.slack-result).response.message.ts }}
          slack-update-message-text: |
            :no_entry: job: ${{ github.job }}

  slack-update-pr-thread:
    needs: [slack, build-container-whalesay, test-container-whalesay]
    uses: ./.github/workflows/slack-pr-thread.yaml
    if: always()
    with:
      slack-channel: ${{ vars.SLACK_CHANNEL }}
      slack-thread: ${{ needs.slack.outputs.thread }}
      status: ${{ contains(join(needs.*.result, ','), 'failure') && ':no_entry:' || ':white_check_mark:' }}
    secrets:
      slack-token: ${{ secrets.SLACK_TOKEN }}
