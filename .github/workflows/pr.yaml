name: PR Update

on:
  pull_request:

env:
  WHALESAY_IMAGE: ${{ vars.HARBOR_REGISTRY }}/${{ vars.HARBOR_PROJECT }}/whalesay

jobs:

  slack:
    # Open a new PR thread on Slack for this CI run
    name: slack
    uses: ./.github/workflows/slack-pr-thread.yaml
    with:
      slack-channel: ${{ vars.SLACK_CHANNEL }}
    secrets:
      slack-token: ${{ secrets.SLACK_TOKEN }}

  changes:
    # Detect which files have been changed on this PR's full history
    name: changes
    needs: slack
    uses: ./.github/workflows/changes.yaml
    with:
      slack-channel: ${{ vars.SLACK_CHANNEL }}
      slack-thread: ${{ needs.slack.outputs.thread }}
      github-app-id: ${{ vars.APP_ID }}
      filters: |
        container-whalesay:
          - './.github/workflows/pr.yaml'
          - './tests/container/**'
    secrets:
      slack-token: ${{ secrets.SLACK_TOKEN }}
      github-app-private-key: ${{ secrets.APP_PRIVATE_KEY }}

  build-container-whalesay:
    # Build the whalesay container and push it as :pr-42 and :pr-42-fe45b3h
    needs: [slack, changes]
    if: fromJSON(needs.changes.outputs.changes).container-whalesay == 'true'
    uses: ./.github/workflows/build-container.yaml
    with:
      container-registry: ${{ vars.HARBOR_REGISTRY }}
      container-registry-user: ${{ vars.HARBOR_USER }}
      container-registry-project: ${{ vars.HARBOR_PROJECT }}
      container-registry-repo: ${{ vars.HARBOR_REPO }}
      github-app-id: ${{ vars.APP_ID }}
      slack-channel: ${{ vars.SLACK_CHANNEL }}
      slack-thread: ${{ needs.slack.outputs.thread }}
      build-cmd: |
        docker build -t $IMAGE -f tests/container/Dockerfile tests/container
    secrets:
      container-registry-token: ${{ secrets.HARBOR_TOKEN }}
      github-app-private-key: ${{ secrets.APP_PRIVATE_KEY }}
      slack-token: ${{ secrets.SLACK_TOKEN }}

  test-container-whalesay:
    needs: [slack, build-container-whalesay]

    runs-on: [self-hosted, linux, x64]

    steps:
      - name: update slack thread
        uses: archive/github-actions-slack@v2.7.0
        id: slack
        with:
          slack-bot-user-oauth-access-token: ${{ secrets.SLACK_TOKEN }}
          slack-channel: ${{ vars.SLACK_CHANNEL }}
          slack-optional-thread_ts: ${{ needs.slack.outputs.thread }}
          slack-text: |
            :hammer_and_wrench: job: ${{ github.job }}

      - name: login to container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ vars.HARBOR_REGISTRY }}
          username: ${{ vars.HARBOR_USER }}
          password: ${{ secrets.HARBOR_TOKEN }}

      - name: pull container
        run: |
          docker pull ${{ needs.build-container-whalesay.outputs.digest }}

      - name: test container
        run: |
          docker run \
            ${{ needs.build-container-whalesay.outputs.digest }} \
              cowsay boo

      - name: update slack thread success
        uses: archive/github-actions-slack@v2.7.0
        if: success()
        with:
          slack-bot-user-oauth-access-token: ${{ secrets.SLACK_TOKEN }}
          slack-channel: ${{ vars.SLACK_CHANNEL }}
          slack-function: update-message
          slack-update-message-ts: ${{ fromJson(steps.slack.outputs.slack-result).response.message.ts }}
          slack-update-message-text: |
            :white_check_mark: job: ${{ github.job }}

      - name: update slack thread failure
        uses: archive/github-actions-slack@v2.7.0
        if: failure()
        with:
          slack-bot-user-oauth-access-token: ${{ secrets.SLACK_TOKEN }}
          slack-channel: ${{ vars.SLACK_CHANNEL }}
          slack-function: update-message
          slack-update-message-ts: ${{ fromJson(steps.slack.outputs.slack-result).response.message.ts }}
          slack-update-message-text: |
            :no_entry: job: ${{ github.job }}

  slack-update:
    needs: [slack, changes, build-container-whalesay, test-container-whalesay]
    uses: ./.github/workflows/slack-pr-thread.yaml
    if: always()
    with:
      slack-channel: ${{ vars.SLACK_CHANNEL }}
      slack-thread: ${{ needs.slack.outputs.thread }}
      status: ${{ contains(join(needs.*.result, ','), 'failure') && ':no_entry:' || ':white_check_mark:' }}
    secrets:
      slack-token: ${{ secrets.SLACK_TOKEN }}
