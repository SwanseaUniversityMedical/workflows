on:
  workflow_call:
    inputs:

      job-name:
        description: "Job name to display on Slack messages."
        required: true
        type: string

      release-info:
        description: "JSON list of release info from dry run."
        required: true
        type: string
        
      chart-registry:
        description: "URL of the chart registry."
        required: true
        type: string

      chart-registry-user:
        description: "Username for the chart registry."
        required: true
        type: string

      chart-registry-project:
        description: "Project within chart registry."
        required: true
        type: string

      chart-registry-repo:
        description: "Repo within chart registry project."
        required: true
        type: string

      chart-registry-digest:
        description: "URI of the chart."
        required: true
        type: string

      chart-tag-suffix:
        description: "Suffix to use when tagging chart"
        required: true
        type: string

      slack-channel:
        description: "ID of the Slack channel to post updates to."
        required: true
        type: string

      slack-thread:
        description: "Slack thread to reply to."
        required: true
        type: string

      status-running:
        description: "Running status for the message header."
        default: ':hammer_and_wrench:'
        type: string

      status-success:
        description: "Success status for the message header."
        default: ':white_check_mark:'
        type: string

      status-failure:
        description: "Failure status for the message header."
        default: ':no_entry:'
        type: string

      github-app-id:
        description: "App ID for Github."
        required: true
        type: string

    secrets:

      slack-token:
        description: "Authentication token for Slack."
        required: true
        
      chart-registry-token:
        description: "Authentication token for the chart registry."
        required: true

      github-app-private-key:
        description: "App private key for Github."
        required: true

    outputs:

      release:
        description: "JSON encoded dictionary of release parameters."
        value: ${{ jobs.release.outputs.release }}

jobs:
  release-chart:
    runs-on: 
      labels: [self-hosted, linux, x64]
      group: heavy

    outputs:
      release: ${{ toJSON(steps.release.outputs) }}

    steps:
      - name: update slack thread
        uses: archive/github-actions-slack@v2.7.0
        id: slack
        continue-on-error: true
        with:
          slack-bot-user-oauth-access-token: ${{ secrets.slack-token }}
          slack-channel: ${{ inputs.slack-channel }}
          slack-optional-thread_ts: ${{ inputs.slack-thread }}
          slack-text: |
            ${{ inputs.status-running }}  job: ${{ github.job }} / ${{ inputs.job-name }}

      - name: clone repo
        uses: actions/checkout@v3

      - name: generate token
        id: generate-token
        uses: tibdex/github-app-token@v1.8.0
        with:
          app_id: ${{ inputs.github-app-id }}
          private_key: ${{ secrets.github-app-private-key }}

      - name: release
        uses: actions/github-script@v6
        id: release
        env:
          GITHUB_TOKEN: ${{ steps.generate-token.outputs.token }}
          RELEASE_NOTES: |
            ${{ fromJSON(inputs.release-info).release-notes }}
        with:
          retries: 3
          script: |
            github.rest.repos.createRelease({
              owner: "${{ github.repository_owner }}",
              repo: "${{ github.event.repository.name }}",
              tag_name: "${{ fromJSON(inputs.release-info).git-tag }}",
              target_commitish: "${{ github.sha }}",
              body: process.env.RELEASE_NOTES,
              name: "${{ fromJSON(inputs.release-info).git-tag }}"
            });
            
      - name: build chart uri
        run: |
          echo "CHART_REPO=${{ inputs.chart-registry }}/chartrepo/${{ inputs.chart-registry-project }}" >> $GITHUB_ENV

      - name: create tag
        run: |
          echo "RELEASE_TAG=${{ fromJSON(inputs.release-info).release-version }}${{ inputs.chart-tag-suffix }}" >> $GITHUB_ENV 

      - name: install helm
        uses: azure/setup-helm@v3
        with:
          version: 'v3.9.0'
          token: ${{ steps.generate-token.outputs.token }}

      - name: setup chart-museum push plugin
        # TODO Can be changed to modern OCI style chart push after we upgrade harbor to latest
        run: |
          helm plugin install https://github.com/chartmuseum/helm-push

      - name: login to chart registry
        run: |
          set -x
          helm repo add --pass-credentials --username '${{ inputs.chart-registry-user }}' --password '${{ secrets.chart-registry-token }}' remote https://${{ env.CHART_REPO }}

      - name: update charts list
        run: |
          helm repo update

      - name: pull chart
        run: |
          helm pull remote/${{ inputs.chart-registry-repo }} --version ${{ inputs.chart-registry-digest }}

      - name: build chart install name
        run: |
          echo "CHART=$(echo ${{ inputs.chart-registry-repo }}-*.tgz)" >> $GITHUB_ENV

      - name: push chart
        run: |
          helm cm-push ${{ env.CHART }} --version ${{ env.RELEASE_TAG }} --app-version ${{ env.RELEASE_TAG }} remote

      - name: annotate the ci run with chart tags
        run: >-
          echo "::notice title=Job: ${{ github.job }} / ${{ inputs.job-name }}::%0A
          Pushed release chart version ${{ fromJSON(inputs.release-info).release-version }}!%0A
          - %0A
          helm repo add --pass-credentials --username <user> --password <token> <repo> https://${{ env.CHART_REPO }}%0A
          helm pull --version ${{ env.RELEASE_TAG }} <repo>/${{ inputs.chart-registry-repo }}"

      - name: update slack thread success
        uses: archive/github-actions-slack@v2.7.0
        if: success()
        continue-on-error: true
        with:
          slack-bot-user-oauth-access-token: ${{ secrets.slack-token }}
          slack-channel: ${{ inputs.slack-channel }}
          slack-function: update-message
          slack-update-message-ts: ${{ fromJson(steps.slack.outputs.slack-result).response.message.ts }}
          slack-update-message-text: |
            ${{ inputs.status-success }}  job: ${{ github.job }} / ${{ inputs.job-name }}
            
            ```
            Status: Released new version!
            Version: ${{ fromJSON(inputs.release-info).release-version }}
            
            helm repo add --pass-credentials --username '<user>' --password '<token>' <repo> https://${{ env.CHART_REPO }}
            helm pull --version ${{ env.RELEASE_TAG }} <repo>/${{ inputs.chart-registry-repo }}
            ```

      - name: update slack thread failure
        uses: archive/github-actions-slack@v2.7.0
        if: failure()
        continue-on-error: true
        with:
          slack-bot-user-oauth-access-token: ${{ secrets.slack-token }}
          slack-channel: ${{ inputs.slack-channel }}
          slack-function: update-message
          slack-update-message-ts: ${{ fromJson(steps.slack.outputs.slack-result).response.message.ts }}
          slack-update-message-text: |
            ${{ inputs.status-failure }}  job: ${{ github.job }} / ${{ inputs.job-name }}
