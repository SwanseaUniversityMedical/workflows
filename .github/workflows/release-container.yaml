on:
  workflow_call:
    inputs:

      job-name:
        description: "Job name to display on Slack messages."
        required: true
        type: string

      release-info:
        description: "JSON list of release info from dry run."
        required: true
        type: string
        
      container-registry:
        description: "URL of the container registry."
        required: true
        type: string

      container-registry-user:
        description: "Username for the container registry."
        required: true
        type: string

      container-registry-project:
        description: "Project within container registry."
        required: true
        type: string

      container-registry-repo:
        description: "Repo within container registry project."
        required: true
        type: string

      container-registry-digest:
        description: "URI of the container."
        required: true
        type: string

      container-tag-prefix:
        description: "Prefix to use when tagging container"
        required: true
        type: string

      container-tag-suffix:
        description: "Suffix to use when tagging container"
        required: true
        type: string

      slack-channel:
        description: "ID of the Slack channel to post updates to."
        required: true
        type: string

      status-failure:
        description: "Failure status for the message header."
        default: ':no_entry:'
        type: string

      cosign-public-key:
        description: "Public key for cosigning images."
        required: false
        type: string

    secrets:

      slack-token:
        description: "Authentication token for Slack."
        required: true
        
      container-registry-token:
        description: "Authentication token for the container registry."
        required: true

      cosign-private-key:
        description: "Private key for cosigning images."
        required: false

      cosign-password:
        description: "Private key password for cosigning images."
        required: false

    outputs:

      release:
        description: "JSON encoded dictionary of release parameters."
        value: ${{ jobs.release-container.outputs.release }}

jobs:
  release-container:
    runs-on: 
      labels: [self-hosted, linux, x64]
      group: heavy

    outputs:
      release: ${{ toJSON(steps.release.outputs) }}

    steps:
      - name: build image uri
        run: |
          echo "IMAGE=${{ inputs.container-registry }}/${{ inputs.container-registry-project }}/${{ inputs.container-registry-repo }}" >> $GITHUB_ENV

      - name: create tag
        run: |
          echo "RELEASE_TAG=${{ env.IMAGE }}:${{ inputs.container-tag-prefix }}${{ fromJSON(inputs.release-info).release-version }}${{ inputs.container-tag-suffix }}" >> $GITHUB_ENV 

      - name: install cosign
        if: inputs.cosign-public-key != ''
        uses: sigstore/cosign-installer@v3.1.2

      - name: login to container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ inputs.container-registry }}
          username: ${{ inputs.container-registry-user }}
          password: ${{ secrets.container-registry-token }}

      - name: cosign verify container
        if: inputs.cosign-public-key != ''
        env:
          COSIGN_PUBLIC_KEY: ${{ inputs.cosign-public-key }}
        run: |
          cosign verify --key env://COSIGN_PUBLIC_KEY "${{ inputs.container-registry-digest }}"

      - name: pull container
        run: |
          docker pull ${{ inputs.container-registry-digest }}

      - name: tag container
        run: |
          docker tag ${{ inputs.container-registry-digest }} ${{ env.RELEASE_TAG }}

      - name: push container
        run: |
          docker push ${{ env.RELEASE_TAG }}

      - name: cosign image
        if: inputs.cosign-public-key != ''
        env:
          COSIGN_PRIVATE_KEY: ${{ secrets.cosign-private-key }}
          COSIGN_PASSWORD: ${{ secrets.cosign-password }}
        run: |
          cosign sign --yes --key env://COSIGN_PRIVATE_KEY "${{ env.DIGEST }}"

      - name: cosign verify image
        if: inputs.cosign-public-key != ''
        env:
          COSIGN_PUBLIC_KEY: ${{ inputs.cosign-public-key }}
        run: |
          cosign verify --key env://COSIGN_PUBLIC_KEY "${{ env.DIGEST }}"

      - name: release
        uses: actions/github-script@v6
        id: release
        env:
          RELEASE_NOTES: |
            ${{ fromJSON(inputs.release-info).release-notes }}
        with:
          retries: 3
          github-token: ${{ github.token }}
          script: |
            github.rest.repos.createRelease({
              owner: "${{ github.repository_owner }}",
              repo: "${{ github.event.repository.name }}",
              tag_name: "${{ fromJSON(inputs.release-info).git-tag }}",
              target_commitish: "${{ github.sha }}",
              body: process.env.RELEASE_NOTES,
              name: "${{ fromJSON(inputs.release-info).git-tag }}"
            });

      - name: annotate the ci run with container tags
        run: >-
          echo "::notice title=Job: ${{ github.job }} / ${{ inputs.job-name }}::%0A
          Pushed release container version ${{ fromJSON(inputs.release-info).release-version }}!%0A
          - %0A
          docker pull ${{ env.RELEASE_TAG }}%0A
          docker pull ${{ inputs.container-registry-digest }}"

      - name: update slack thread failure
        uses: archive/github-actions-slack@v2.7.0
        if: failure()
        continue-on-error: true
        with:
          slack-bot-user-oauth-access-token: ${{ secrets.slack-token }}
          slack-channel: ${{ inputs.slack-channel }}
          slack-text: |
            *${{ github.repository }}*\n
            *Release ${{ github.ref }}*\n
            ${{ inputs.status-failure }} job: ${{ github.job }} / ${{ inputs.job-name }}\n
            <https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}|:book: CI Logs>\n
            ```
            Ref:      ${{ github.ref }}\n
            Sha:      ${{ github.sha }}\n
            Workflow: ${{ github.workflow }}\n
            Run:      ${{ github.run_id }}
            ```
