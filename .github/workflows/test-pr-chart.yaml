on:
  workflow_call:
    inputs:

      job-name:
        description: "Job name to display on Slack messages."
        required: true
        type: string

      command:
        description: "Command to test the chart named $CHART."
        required: true
        type: string

      chart-registry:
        description: "URL of the chart registry."
        required: true
        type: string

      chart-registry-user:
        description: "Username for the chart registry."
        required: true
        type: string

      chart-registry-project:
        description: "Project within chart registry."
        required: true
        type: string

      chart-registry-repo:
        description: "Repo within chart registry project."
        required: true
        type: string

      chart-registry-digest:
        description: "Version of the chart from within chart registry repo."
        required: true
        type: string

      slack-channel:
        description: "ID of the Slack channel to post updates to."
        required: true
        type: string

      status-failure:
        description: "Failure status for the message header."
        default: ':no_entry:'
        type: string

      cosign-public-key:
        description: "Public key for cosigning images."
        required: false
        type: string

    secrets:

      slack-token:
        description: "Authentication token for Slack."
        required: true

      chart-registry-token:
        description: "Authentication token for the chart registry."
        required: true

jobs:
  test-chart:
    runs-on: 
      labels: [self-hosted, linux, x64]
      group: heavy

    steps:
      - name: build chart uri
        run: |
          echo "CHART_REPO=${{ inputs.chart-registry }}/${{ inputs.chart-registry-project }}/chart" >> $GITHUB_ENV

      - name: clone repo
        uses: actions/checkout@v4.1.1

      - name: install cosign
        if: inputs.cosign-public-key != ''
        uses: sigstore/cosign-installer@v3.1.2

      - name: login to container registry for cosign
        if: inputs.cosign-public-key != ''
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.chart-registry }}
          username: ${{ inputs.chart-registry-user }}
          password: ${{ secrets.chart-registry-token }}

      - name: install helm
        uses: azure/setup-helm@v3
        with:
          version: 'v3.9.0'
          token: ${{ github.token }}

      - name: cosign verify chart
        if: inputs.cosign-public-key != ''
        env:
          COSIGN_PUBLIC_KEY: ${{ inputs.cosign-public-key }}
          DIGEST: ${{ inputs.chart-registry-digest }}
        run: |
          cosign verify --key env://COSIGN_PUBLIC_KEY "${{ env.CHART_REPO }}/${{ inputs.chart-registry-repo }}:${DIGEST//\+/_}"

      - name: login to chart registry
        run: |
          helm registry login \
            --username '${{ inputs.chart-registry-user }}' \
            --password '${{ secrets.chart-registry-token }}' \
            ${{ inputs.chart-registry }}

      - name: pull chart
        run: |
          helm pull --version ${{ inputs.chart-registry-digest }} oci://${{ env.CHART_REPO }}/${{ inputs.chart-registry-repo }}

      - name: build chart install name
        run: |
          echo "CHART=$(echo ${{ inputs.chart-registry-repo }}-*.tgz)" >> $GITHUB_ENV

      - name: test chart
        run: ${{ inputs.command }}

      - name: update slack thread failure
        uses: archive/github-actions-slack@v2.7.0
        if: failure()
        continue-on-error: true
        with:
          slack-bot-user-oauth-access-token: ${{ secrets.slack-token }}
          slack-channel: ${{ inputs.slack-channel }}
          slack-text: |
            *${{ github.repository }}*\n
            *PR-${{ github.event.pull_request.number }} Update*\n
            ${{ inputs.status-failure }} job: ${{ github.job }} / ${{ inputs.job-name }}\n
            <https://github.com/${{ github.repository }}/pull/${{ github.event.pull_request.number }}|:octocat: Pull Request>\n
            <https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}|:book: CI Logs>\n
            ```
            PR:       ${{ github.event.pull_request.title }}
            Branch:   ${{ github.head_ref }}
            Ref:      ${{ github.ref }}
            Sha:      ${{ github.event.pull_request.head.sha }}
            Workflow: ${{ github.workflow }}
            Run:      ${{ github.run_id }}
            ```
