on:
  workflow_call:
    inputs:

      job-name:
        description: "Job name to display on Slack messages."
        required: true
        type: string

      release-rules:
        description: "JSON list of rule dicts for what commit types trigger releases."
        default: |
          [
            {"type": "major", "release": "major"},
            {"type": "minor", "release": "minor"},
            {"type": "patch", "release": "patch"},
            {"type": "no-release", "release": false},

            {"type": "chore", "release": "patch"},
            {"type": "refactor", "release": "patch"},
            {"type": "style", "release": "patch"},

            {"type": "docs", "release": false},
            {"type": "test", "release": false},
            {"type": "ci", "release": false},

            {"type": "feat", "release": "minor"},

            {"type": "revert", "release": "patch"},
            {"type": "perf", "release": "patch"},
            {"type": "fix", "release": "patch"},
            {"type": "build", "release": "patch"},
          ]
        type: string

      release-branches:
        description: "JSON list of regex branch filters."
        default: |
          [
            '+([0-9])?(.{+([0-9]),x}).x',
            'main'
          ]
        type: string

      release-tag-format:
        description: "Semantic-release Github release tag format."
        default: '${version}'
        type: string

      slack-channel:
        description: "ID of the Slack channel to post updates to."
        required: true
        type: string

      slack-thread:
        description: "Slack thread to reply to."
        required: true
        type: string

      status-running:
        description: "Running status for the message header."
        default: ':hammer_and_wrench:'
        type: string

      status-success:
        description: "Success status for the message header."
        default: ':white_check_mark:'
        type: string

      status-failure:
        description: "Failure status for the message header."
        default: ':no_entry:'
        type: string

      github-app-id:
        description: "App ID for Github."
        required: true
        type: string

    secrets:

      slack-token:
        description: "Authentication token for Slack."
        required: true

      github-app-private-key:
        description: "App private key for Github."
        required: true

    outputs:

      release-rules:
        description: "JSON list of rule dicts for what commit types trigger releases."
        value: ${{ inputs.release-rules }}

      release-branches:
        description: "JSON list of regex branch filters."
        value: ${{ inputs.release-branches }}

      release-tag-format:
        description: "Semantic-release Github release tag format."
        value: ${{ inputs.release-tag-format }}

      release:
        description: "JSON encoded dictionary of release outputs."
        value: ${{ jobs.version.outputs.release }}

jobs:
  version:
    runs-on: [self-hosted, linux, x64]

    outputs:
      release: ${{ toJSON(steps.release.outputs) }}

    steps:
      - name: update slack thread
        uses: archive/github-actions-slack@v2.7.0
        id: slack
        continue-on-error: true
        with:
          slack-bot-user-oauth-access-token: ${{ secrets.slack-token }}
          slack-channel: ${{ inputs.slack-channel }}
          slack-optional-thread_ts: ${{ inputs.slack-thread }}
          slack-text: |
            ${{ inputs.status-running }} job: ${{ github.job }} / ${{ inputs.job-name }}

      - name: clone repo
        uses: actions/checkout@v3

      - name: generate token
        id: generate-token
        uses: tibdex/github-app-token@v1.8.0
        with:
          app_id: ${{ inputs.github-app-id }}
          private_key: ${{ secrets.github-app-private-key }}

      - name: determine release
        uses: docker://ghcr.io/codfish/semantic-release-action:v2
        id: release
        env:
          GITHUB_TOKEN: ${{ steps.generate-token.outputs.token }}
        with:
          dry_run: true
          branches: ${{ inputs.release-branches }}
          tag_format: ${{ inputs.release-tag-format }}
          plugins: |-
            [
              ['@semantic-release/commit-analyzer', {
                "releaseRules": ${{ inputs.release-rules }},
              }], 
              '@semantic-release/release-notes-generator',
              ['@semantic-release/github', {
                "successComment": false,
                "failTitle": false
              }]
            ]

      - name: update slack thread success
        uses: archive/github-actions-slack@v2.7.0
        if: success()
        continue-on-error: true
        with:
          slack-bot-user-oauth-access-token: ${{ secrets.slack-token }}
          slack-channel: ${{ inputs.slack-channel }}
          slack-function: update-message
          slack-update-message-ts: ${{ fromJson(steps.slack.outputs.slack-result).response.message.ts }}
          slack-update-message-text: |
            ${{ inputs.status-success }} job: ${{ github.job }} / ${{ inputs.job-name }}
            
            ```
            Status: ${{ steps.release.outputs.new-release-published == 'true' && 'Eligible for release!' || 'Not eligible for release.' }}
            Version: ${{ steps.release.outputs.release-version }}
            ```

      - name: update slack thread failure
        uses: archive/github-actions-slack@v2.7.0
        if: failure()
        continue-on-error: true
        with:
          slack-bot-user-oauth-access-token: ${{ secrets.slack-token }}
          slack-channel: ${{ inputs.slack-channel }}
          slack-function: update-message
          slack-update-message-ts: ${{ fromJson(steps.slack.outputs.slack-result).response.message.ts }}
          slack-update-message-text: |
            ${{ inputs.status-failure }} job: ${{ github.job }} / ${{ inputs.job-name }}
